@model TestTaskMvc.Models.OrderItem

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="text-danger">@ViewData["ErrorCreateMessage"]</div>
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" data-value="" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
                <div class="form-text">Вводить значение на примере "100,000", 3 числа после запятой</div>
            </div>
            <div class="form-group">
                <label asp-for="Unit" class="control-label"></label>
                <input asp-for="Unit" class="form-control" />
                <span asp-validation-for="Unit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order" class="control-label"></label>
                <select asp-for="OrderId" class="form-control" asp-items="ViewBag.OrderId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (ViewBag.Id != null)
    {
        <a asp-controller="Order" asp-action="Details" asp-route-id="@ViewData["Id"]">Back to Order</a>
    }
    else
    {
        <a asp-controller="Home" asp-action="Index" >Back to All Order</a>
    }
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
